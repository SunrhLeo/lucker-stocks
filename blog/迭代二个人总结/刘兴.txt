    迭代二结束了，最大的感受就是：javafx没有系统性的学好。
    最初对于javafx 友好的界面风格和提供的各种方便使用的组件感到惊喜，
然而和我以前使用的swing相比，其背后的机制和调用也显得比较复杂。主要有
一下几点：
    一.对于工具的使用上的不熟悉。scene builder和fxml文件都是机好的工具，
能够可视化的布局界面，本应可以提高效率。但由于缺乏背景知识，反而造成不
少的浪费。例如：一个fxml文件需和一个controller相关联，controller的写法
在上不再需要实例化；scene builder只能可视化布局系统提供的组件，对于自定
义控件需要代码支持，然而这又使得fxml布局的控件和代码的自定义控件在一个
controller里，代码显得混乱而缺乏统一。
    二.对于javafx调用机制的把握不足。javafx背后支持着自己的一套代码，api
能够显示出一部分，还有一部分在官方提供的教程里。一方面，通过阅读官方的样
例代码，并不能知道其背后的机制，例如launch()方法总是static的，未经定义而
能使用的cellfactory；另一方面，有些写法自己在阅读时并未感到特殊，而当自己
使用时，以一种自己以为等价的写法却有bug，这个过程也令人特别的苦恼。这方面
以表格数据需以simpleproperty类型封装一下为典型。
    三.集成上的困难。由于水平原因，我重写的javafx控件未能达到良好的效果，
所以采用了swing的jfreechart包。而在javafx和swing集成的过程中，又由于各种
各样特殊的情况，例如javafx的线程是特殊的，javafx的anchorpane在swingnode里
会变黑等等让人心累的bug。
    总体说来，对于javafx的使用和学习，现在我处于一种需要什么就去学什么的状
态。总显得疲于奔命，而焦头烂额。希望在迭代三的过程中，能够系统性地学习javafx。
    至于说迭代二有什么收获，我想最大的收获应该是混迹于各大论坛，尤其是
stackoverflow。这个英文论坛上对于javafx有很多的提问和回答，而国内的论坛比如
CSDN就很少。某种程度上来说，接触javafx、css、scene builder、jfreechart这些也
拓展了我的视野，算是一种收获吧。